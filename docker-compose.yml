version: '3.8'

services:
  # Laravel Service
  laravel:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - 8000:8000
    depends_on:
      - mysql
    tty: true
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network

  # MySQL Service
  mysql:
    image: mariadb:latest
    restart: unless-stopped
    volumes:
      - dbdata:/var/lib/mysql/
    tty: true
    ports:
      - ${DB_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    networks:
      - app-network

  # Nginx Service
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - .:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    tty: true
    ports:
      - 80:80
    depends_on:
      - laravel
    networks:
      - app-network
    
  # PHPMyAdmin
  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      restart: unless-stopped
      ports:
          - "8080:80"
      environment:
          PMA_HOST: ${DB_HOST}
          PMA_PORT: ${DB_PORT}
          MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      networks:
          - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local